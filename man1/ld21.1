.\" groff -man ld21.1
.TH "ld21" 1 "January 23, 2005"

.SH NAME
ld21 \- The linker for object files generated by
.BR as218x "(1) and " as219x (1). 

.SH SYNOPSIS
.in +5
.ti -5
.B ld21
.RB [ \-v ]
.ti -5
.B ld21
.RB [ \-d 
.IR yl ]
.RB [ \-D 
.IR architecture ]
.RB [ \-L ]
.RB [ \-m
.IR mapfile ]
.RB [ \-o
.IR output-file ]
.RB [ \-T 
.IR link-description-file ]
.I files ...
.in -5

.SH DESCRIPTION
.B Ld21
links object files generated by 
.BR as218x "(1), and " as219x (1).
It follows the syntax described in
.B  VisualDSP++ 3.0 Linker & Utilites Manual for ADSP-218x and ADSP-219x DSPs
published by Analog Devices and at the time of writing this
documentation, could be downloaded from their web site at
.BR "http://www.analog.com/library/dspManuals/" .
.sp
The Analog Devices Linker is an extremely sophisticated tool
with a very rich syntax. 
.B Ld21
only implements enough of the linker to be able to generate an
executable from multiple object files. If a linker construct is
not described here, it is probably not supported.
.sp
The format of the Link Description File or LDF is as follows:
.IP \(bu 2
All keywords are reserved to preserve compatiblity for future
releases.
.IP \(bu 2
Preprocessor directives are not supported.
.IP \(bu 2
Constructs supported at the top level are:
.RS 2
.IP 1. 4
.B ARCHITECTURE
.IP 2. 4
.B SEARCH_DIR
.IP 3. 4
.B MEMORY
.IP 4. 4
.B PROCESSOR
.IP 5. 4
.IB macroname =
.IP 6. 4
.B MAP
.IP 7. 4
.B XREF
.RE 1

.SH OPTIONS
.TP
.BI \-d " yl"
.br
Turn on debugging output. 
.I y
turns on yacc debug output for the assembler.
.I l
turns on flex debug output for the lexer.

This option is only available when compiled in by defining
DEBUG at the beginning of ld21/Makefile.
.TP
.BI \-D " architecture"
Specify the target architecture. Equivalent to using
.B ARCHITECTURE
in the LDF except that if no LDF is specified on the command line,
the default LDF file corresponding to the specified architecture
will be loaded from the directory pointed to by the OPEN21XXDIR
environment variable if it is defined.
.TP
.B \-L
.br
Include local symbols in the map file. This option has no effect
if a map file is not specified either on the command line or in the
LDF file.
.TP
.BI \-m " mapfile"
Specify a file in which to write the link map. This option will override
the MAP() command in the LDF if one exists.
.TP
.BI \-o " output-file"
Specify a file to write the linked output to.
.TP
.BI \-T " link-description-file"
Specify the Link Description File or LDF. This is required unless an
ARCHITECTURE is specified.
.TP
.B \-v
Print
.BR ld21 "\'s version information."
.TP
.B \-X
Include a cross reference of symbols in the map file.  This option
has no effect if a map file is not specified either on the command
line or in the LDF file.

.SH ENVIRONMENT VARIABLES
.TP
OPEN21XXDIR
Points to a directory which contains default LDF files for each of the
supported architectures.  The default installation directory is:
.ti +5
/usr/local/share
.br
in which case set OPEN21XXDIR to:
.ti +5
/usr/local/share/open21xx.
.br
Refer to the man page for your shell for instructions on setting and
exporting environment variables.

.SH MAP FILE
A map file will be generated if either the \-m option is provided on the
command line or a MAP() command is placed in the LDF. There are three
main parts to the map file:
.RS 2
.IP 1. 4
.B Output Sections
.IP 2. 4
.B Input Sections
.IP 3. 4
.B Symbols
.RE 1

Note that all addresses and sizes in the map file are in hexadecimal.

The Output Sections are divided into Program Sections and Data Sections.
Each section is listed alphabetically by name with its start address,
size, and section name.

The Input Sections are broken down first by file and section type, either 
program or data, and then by section name. Each section is listed
alphabetically by name with its start address, size, and section name.

The symbols are listed alphabetically, then by output address and finally
by source file name. Symbol definitions are marked with an \'@\' following
the symbol name. If the \-L option is specified on the command line, local
symbols will also be listed. They will have a \'*\' after the symbol name (or
after the \'@\' if the line refers to a symbol definition). If the \-X option
is specified on the command line or the XREF command is given in the LDF,
all references to a symbol will be included in the listing as well.

For example:
  Name           Section      Addr  Off   Size  File
  ad1847Init  @  program0     0040  0000  0000  ad1847.o
  ad1847Init     program0     0038  0008        pass.o
  tx_buf      @* data0        0004  0004  0003  ad1847.o
  tx_buf       * program0     0042  0002        ad1847.o

The symbol ad1847Init is defined at offset 0x0000 from section program0 in
file ad1847.o, which corresponds to address 0x0040 in the linked
executable. The size, 0x0000, suggests that the symbol is a label as
opposed to a variable declaration. Ad1847Init is global and is referenced
at offset 0x0008 from section program0 in file pass.o which corresponds to
address 0x0038 in the linked executable.

Likewise, the symbol tx_buf is defined at offset 0x0004 from section data0
in file ad1847.o which corresponds to address 0x0004 in the linked executable
and has a size of 0x0003. Tx_buf is local and is referenced at offset
0x0002 from section program0 in file ad1847.o which corresponds to address
0x0042 in the linked executable.

.SH DIAGNOSTICS
.B Ld21
generates a number of error messages to standard error that follow the gcc
format:
.sp
.RS
.B file:line: " message"
.RE
.sp
Where:
.br
.RS
.TP
.TP
.B file:line:
is the location in the LDF where the problem occurred.
.TP
.B message
is a text description of the problem.
.RE

.SH KNOWN BUGS
None!

.SH AUTHOR
Written by Keith Clifford:
.br
email: <sharpshinwm@telus.net>
.br
web:   http://www3.telus.net/sharpshin

.SH REPORTING BUGS
Report bugs to <sharpshinwm@telus.net>.

.SH COPYRIGHT
Copyright\(co 2002 Free Software Foundation, Inc. This is
free software; see the source for copying  conditions.
There is NO warranty; not even for MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.

.SH "SEE ALSO"
.BR as218x "(1), " as219x "(1), " elfdump "(1), " ez21 "(1), " verify21 (1).

Note: elfdump and verify21 are primarily useful for debugging
the tools themselves so are not installed.


